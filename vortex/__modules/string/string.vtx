const lib = load_lib("./bin/string.wasm", ["split", "trim", "chars", "replaceAll", "lower", "upper"])

const split = (str, delim = "") => lib.split(str, delim)
const trim = (str) => lib.trim(str)
const chars = (str) => lib.chars(str)
const replaceAll = (str, from, to) => lib.replaceAll(str, from, to)
const lower = (str) => lib.lower(str)
const upper = (str) => lib.upper(str)


const at = (str, index) => str[index]
const first = (str) => str[0]
const last = (str) => str[str.length()-1]

const join = (list, delim = " ") => {
    var str = ""
    if (list.length() == 0) {
        return str
    }
    for (list, index, item) {
        str += item
        if (index < list.length()-1) {
            str += delim
        }
    }
    return str.trim()
}

const startsWith = (str, start) => {
    if (start.length() > str.length()) {
        return false
    }

    for (start.chars(), index, c) {
        if (c != str[index]) {
            return false
        }
    }

    return true
}

const endsWith = (str, end) => {
    if (end.length() > str.length()) {
        return false
    }

    const diff = str.length() - end.length()

    for (end.chars(), index, c) {
        if (c != str[index + diff]) {
            return false
        }
    }

    return true
}

const substring = (str, start, length) => {
    var substr = ""
    for (start..(start+length), index, value) {
        const c = str[value]
        if (c) {
            substr += str[value]
        }
    }
    return substr
}

const contains = (str, substr) => {
    if (str.length() < substr.length()) {
        return false
    }

    const str_chars = str.chars()

    for (str_chars, i, c) {
        const current_substr = substring(str, i, substr.length())
        if (current_substr == substr) {
            return true
        }
    }

    return false
}

const w_chars = (str, width = 2) => {
    var char_list = []
    var char = ""
    for (str.chars(), i, c) {
        if (c == " ") {
            char_list.append(" ")
            continue
        }
        char += c
        if (char.length() == width) {
            char_list.append(char)
            char = ""
        }
    }
    return char_list
}