const lib = load_lib("./bin/requests.wasm", ["_get", "_post", "_put", "_delete", "_patch", "_options", "_head"])

import [split, replaceAll, first, join] : string

const get = (url, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._get(_url, _endpoint, headers)
}

const post = (url, payload, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._post(_url, _endpoint, payload, headers)
}

const put = (url, payload, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._put(_url, _endpoint, payload, headers)
}

const patch = (url, payload, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._patch(_url, _endpoint, payload, headers)
}

const delete = (url, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._delete(_url, _endpoint, headers)
}

const options = (url, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._options(_url, _endpoint, headers)
}

const head = (url, headers = {}) => {
	const split_url = url.replaceAll("//", "||").split("/")
	const _url = split_url.first().replaceAll("||", "//")
	const _endpoint = "/" + split_url.remove(0).join("/")
	return lib._head(_url, _endpoint, headers)
}