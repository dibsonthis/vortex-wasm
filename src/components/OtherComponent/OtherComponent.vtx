import [component, value, emit_event] : "../../lib/whirlwind"
import wasm
import io

const template = `
<style>
.btn {
    padding: 10px;
    margin: 5px;
    color: white;
    border-radius: 10px;
    border: none;
    font-size: 14px;
    cursor: pointer;

    transition: all 0.3s ease-in-out;
    &:hover {
        background-color: #3E95FF !important;
    }
}
</style>

<div>
    <h1> {{ title }} </h1>
    <div #nameDiv>
        <input #nameInput $height: 30px $borderRadius: 10px />
        <button 
            className: btn
            $backgroundColor: green
            @click: updateTitle
        > 
            Change title 
        </button>
    </div>
    <p> Hi, my name is "{{ name }}" and I am {{ age }} years old. </p>
    <p> My favorite color is {{ props.color }}. </p>
    <p> My favorite books are: </p>
    <ul>
        <li %for: "books, book" $listStyleType: none>
        <p> {{ book.title }} - {{ book.author }} </p>
        </li>
    </ul>
    <ul>
        <li %for: {{"nums, num"}} $listStyleType: none>
        <p> {{ num }} </p>
        </li>
    </ul>
    <button @click: {{ nums.append(10) }} className: {{ "btn" }} $backgroundColor: {{ props.color }}> Add Num </button>
    <button @click: removeNum className: btn $backgroundColor: red> Remove Num </button>
</div>
`

const data = {
    title: "Hi there",
    age: 18,
    name: "Jason",
    nums: [1, 2, 3, 4],
    books: [{
        author: "James Whitman",
        title: "The Anaconda Touch"
    }, {
        author: "Bradley Eric",
        title: "Forsaken Rights"
    }],
    addNumColor: "green"
}

const methods = (data) => ({
    updateTitle: (parent) => {
        data.title = parent.nameDiv.nameInput.value()
        parent.nameDiv.nameInput.update({
            value: ""
        })
    },
    addNum: () => {
        if (data.nums.length() == 0) {
            data.nums.append(1)
            return
        }
        data.nums.append(data.nums[data.nums.length()-1] + 1)
    },
    removeNum: () => {
        data.nums.remove(data.nums.length()-1)
    }
})

const OtherComponent = component(template, data, methods)